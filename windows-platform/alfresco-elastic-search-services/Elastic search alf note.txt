Property to be set to control indexing behavior via mediation-filter:

alfresco.mediation.filter-file	=> The configuration file which contains fields and node types blacklists. The default value is classpath:mediation-filter.yml

Within the Elasticsearch connector there is a subset of components that index data. A component called Mediation subscribes to the channel indicated by the alfresco.event.topic attribute, as seen in the table above, and processes the incoming node events. The configuration of that component allows you to declare three blacklist sets for filtering out nodes or attributes to be indexed. These blacklists can be specified in the file using the alfresco.mediation.filter-file attribute, as seen in the table above. The default file is called mediation-filter.yml that must be in the module classpath, see the sample content of that file:


mediation:
  nodeTypes:
  contentNodeTypes:
  nodeAspects:
    - sys:hidden
  fields:
    - cmis:changeToken
    - alfcmis:nodeRef
    - cmis:isImmutable
    - cmis:isLatestVersion
    - cmis:isMajorVersion
    - cmis:isLatestMajorVersion
    - cmis:isVersionSeriesCheckedOut
    - cmis:versionSeriesCheckedOutBy
    - cmis:versionSeriesCheckedOutId
    - cmis:checkinComment
    - cmis:contentStreamId
    - cmis:isPrivateWorkingCopy
    - cmis:allowedChildObjectTypeIds
    - cmis:sourceId
    - cmis:targetId
    - cmis:policyText
    - trx:password
    - pub:publishingEventPayload



Where:

nodeTypes: if the node wrapped in the incoming event has a type which is included in this set, the node processing is skipped.
contentNodeTypes: if the node wrapped in the incoming event has a content change associated with it and it has a type which is included in this set, then the corresponding content processing won’t be executed. This means nodes belonging to one of the node types in this set, won’t have any content indexed in Elasticsearch.
nodeAspects: if the node wrapped in the incoming event has an aspect which is included in this set, the node processing is skipped.
fields: fields listed in this set are removed from the incoming nodes metadata. This means fields in this set won’t be sent to Elasticsearch for indexing, and therefore they won’t be searchable.

Default mediation-filter config resides in 'alfresco-elasticsearch-live-indexing-shared-xxx.jar' which is a dependency of alfresco-elasticsearch-live-indexing-xxx-app.


mediation filter can be provided via either of the following:

1- When using docker based environment

live-indexing-mediation:
        image: quay.io/alfresco/alfresco-elasticsearch-live-indexing-mediation:${LIVE_INDEXING_MEDIATION_TAG}
        depends_on:
            - elasticsearch
            - alfresco
        environment:
            SPRING_ELASTICSEARCH_REST_URIS: http://elasticsearch:9200
            SPRING_ACTIVEMQ_BROKERURL: nio://activemq:61616
            ALFRESCO_MEDIATION_FILTER-FILE: file:/usr/tmp/mediation-filter.yml
        volumes:
            - ./mediation-filter.yml:/usr/tmp/mediation-filter.yml



2- If you have installation based on distribution package then pass the following param to live indexing boot app:

	java -jar C:\alfresco-elastic-search-services\alfresco-elasticsearch-live-indexing-3.1.1-app.jar ^
		--server.port=8083 ^
		--spring.activemq.broker-url=nio://localhost:61616 ^
		--spring.elasticsearch.rest.uris=http://localhost:9200 ^
		--alfresco.sharedFileStore.baseUrl=http://localhost:8099/alfresco/api/-default-/private/sfs/versions/1/file/ ^
		--alfresco.acceptedContentMediaTypesCache.baseurl=http://localhost:8090/transform/config ^
		--elasticsearch.indexName=alfresco
		--alfresco.mediation.filter-file=file:C:\alfresco-elastic-search-services\mediation-filter.yml



For more details visit: https://docs.alfresco.com/search-enterprise/latest/config/#alfresco-live-indexing-app